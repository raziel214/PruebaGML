openapi: 3.0.1
info:
  title: Api Clientes
  description: Api Rest PruebaGML
  version: 1.0
servers:
  - url: http://localhost:8080
    description: Generated server url
security:
  - JWT: []
paths:
  /api/users/{id}:
    put:
      tags:
        - user-controller
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - user-controller
      operationId: findByIdUsers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Users'
    delete:
      tags:
        - user-controller
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
  /api/cliente/{id}:
    put:
      tags:
        - cliente-controller
      operationId: updateCliente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - cliente-controller
      operationId: finByIdRole
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Cliente'
    delete:
      tags:
        - cliente-controller
      operationId: deleteCliente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
  /public/api/auth/login:
    post:
      tags:
        - auth-controller
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users:
    get:
      tags:
        - user-controller
      operationId: fetchAllUsers
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
    post:
      tags:
        - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Users'
  /api/users/login:
    post:
      tags:
        - user-controller
      operationId: authenticateUser_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/cliente:
    get:
      tags:
        - cliente-controller
      operationId: fetchAllCliente
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'
    post:
      tags:
        - cliente-controller
      operationId: createCliente
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Cliente'
  /api/cliente/sharedKey/{id}:
    post:
      tags:
        - cliente-controller
      operationId: findBySharedKey
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Cliente'
components:
  schemas:
    Users:
      type: object
      properties:
        user_id:
          type: integer
          format: int64
        userName:
          type: string
        userLastName:
          type: string
        userEmail:
          type: string
        userPass:
          type: string
        userRolId:
          type: integer
          format: int64
        dateCreation:
          type: string
          format: date-time
        dateUpdate:
          type: string
          format: date-time
        dateDelete:
          type: string
          format: date-time
        state:
          type: integer
          format: int32
        first:
          type: integer
          format: int32
        recoveryPass:
          type: integer
          format: int32
        ciudadId:
          type: integer
          format: int64
    Cliente:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sharedKey:
          type: string
        nombre:
          type: string
        apellido:
          type: string
        correo:
          type: string
        telefono:
          type: string
    LoginUser:
      type: object
      properties:
        userEmail:
          type: string
        userPass:
          type: string
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
